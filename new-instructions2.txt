
X 8 4 4 4
Y 8 4 4 16


0000000	add	d, s, t	X
0000001	addi	d, s, C	Y
0000010	sub	d, s, t	X
0000011	mul	s, t	X
0000100	div	s, t 	X
0000101	sll	d, s, C	Y
0000110	srl	d, s, C	Y
0000111	sra	d, s, C	Y
0001000	sllv	d, s, t	X
0001001	srlv	d, s, t	X
0001010	srav	d, s, t	X
0001011	beq	s, d, C	Y
0001100	bne	s, d, C	Y
0001101	slt	d, s, t	X
0001110	slti	d, s, C	Y
0001111	and	d, s, t	X
0010000	andi	d, s, C	Y
0010001	or	d, s, t	X
0010010	ori	d, s, C	Y
0010011	xor	d, s, t	X
0010100	nor	d, s, t	X
0010101	j	C	Y
0010110	jr	t	X
0010111	jal	d, C	Y
0011000	jalr	d, t	X
0011001	lw	d, s, C	Y	d <- [s+C]
0011010	sw	d, s, C	Y	[s+C] <- d
0011011	mfhi	d	X
0011100	mflo	d	X
0011101
0011110
0011111 halt



pseudo instructions

nop
	add r0, r0, r0

nop
	mfhi r0
	
move d, s
	add d, s, r0
	
clear d
	add d, r0, r0

li d, C
	addi d, r0, C
	
bgt x, y, C
	slt r1, y, x
	bne r1, r0, C
	
blt x, y, C
	slt r1, x, y
	bne r1, r0, C
	
bge x, y, C
	slt r1, x, y
	beq r1, r0, C
	
ble x, y, C
	slt r1, y, x
	beq r1, r0, C
	
mul d, s, t
	mul s, t
	mflo d

div d, s, t
	div s, t
	mflo d

push	d
	addi $sp, $sp, -1
	sw d, 0($sp)
	
pop	d
	lw d, r14, 0
	addi r14, r14, 1
	
jal	C
	jal ra, C

jalr	t
	jalr ra, t

not	d
	; addi at, zero, -1
	; xor d, d, at
	nor d, d, d
	
neg	d
	nor d, d, d
	addi d, d, 1
	
-----------------

fetch:
	PC -> Madr ; Mem -> IR
	PC + 1 -> PC
	PC -> Madr ; Mem -> OP
	PC + 1 -> PC

execute:

0000000	add	d, s, t	X

	Rs -> A ; Rt -> B ; 0000 -> ALU OP ; ALU R -> RESULT
	RESULT -> Rd


0000001	addi	d, s, C	Y

	Rs -> A ; OP -> B ; 0000 -> ALU OP ; ALU R -> RESULT
	RESULT -> Rd


0000010	sub	d, s, t	X

	Rs -> A ; Rt -> B ; 0001 -> ALU OP ; ALU R -> RESULT
	RESULT -> Rd


0000011	mul	s, t	X

	Rs -> A ; Rt -> B ; 1001 -> ALU OP ; ALU R -> LO ; ALU HI -> HI


0000100	div	s, t 	X

	Rs -> A ; Rt -> B ; 1010 -> ALU OP ; ALU R -> LO ; ALU HI -> HI


0000101	sll	d, s, C	Y

	Rs -> A ; OP -> B ; 0010 -> ALU OP ; ALU R -> RESULT
	RESULT -> Rd


0000110	srl	d, s, C	Y

	Rs -> A ; OP -> B ; 0011 -> ALU OP ; ALU R -> RESULT
	RESULT -> Rd


0000111	sra	d, s, C	Y

	Rs -> A ; OP -> B ; 0100 -> ALU OP ; ALU R -> RESULT
	RESULT -> Rd


0001000	sllv	d, s, t	X

	Rs -> A ; Rt -> B ; 0010 -> ALU OP ; ALU R -> RESULT
	RESULT -> Rd


0001001	srlv	d, s, t	X

	Rs -> A ; Rt -> B ; 0011 -> ALU OP ; ALU R -> RESULT
	RESULT -> Rd


0001010	srav	d, s, t	X

	Rs -> A ; Rt -> B ; 0100 -> ALU OP ; ALU R -> RESULT
	RESULT -> Rd


0001011	beq	s, d, C	Y

	Rs -> A ; Rd -> B ; 0000 -> ALU OP
	PC + (OP<<1) -> PC SRC ; ALU EQ -> PC WRT SRC


0001100	bne	s, d, C	Y

	Rs -> A ; Rd -> B ; 0000 -> ALU OP
	PC + (OP<<1) -> PC SRC ; NOT ALU EQ -> PC WRT SRC


0001101	slt	d, s, t	X

	Rs -> A ; Rt -> B ; 0000 -> ALU OP
	ALU LT -> Rd


0001110	slti	d, s, C	Y

	Rs -> A ; OP -> B ; 0000 -> ALU OP
	ALU LT -> Rd


0001111	and	d, s, t	X

	Rs -> A ; Rt -> B ; 0101 -> ALU OP ; ALU R -> RESULT
	RESULT -> Rd


0010000	andi	d, s, C	Y

	Rs -> A ; OP -> B ; 0101 -> ALU OP ; ALU R -> RESULT
	RESULT -> Rd


0010001	or	d, s, t	X

	Rs -> A ; Rt -> B ; 0110 -> ALU OP ; ALU R -> RESULT
	RESULT -> Rd


0010010	ori	d, s, C	Y

	Rs -> A ; OP -> B ; 0110 -> ALU OP ; ALU R -> RESULT
	RESULT -> Rd


0010011	xor	d, s, t	X

	Rs -> A ; Rt -> B ; 0111 -> ALU OP ; ALU R -> RESULT
	RESULT -> Rd


0010100	nor	d, s, t	X

	Rs -> A ; Rt -> B ; 1000 -> ALU OP ; ALU R -> RESULT
	RESULT -> Rd


0010101	j	C	Y

	OP -> PC

0010110	jr	s	X

	Rs -> PC

0010111	jal	d, C	Y

	PC -> Rd
	OP -> PC

0011000	jalr	d, s	X

	PC -> Rd
	Rs -> PC

0011001	lw	d, s, C	Y	d <- [s+C]

	Rs -> A ; OP -> B ; 0000 -> ALU OP ; ALU R -> RESULT 
	RESULT -> Madr ; Mem -> Rd

0011010	sw	d, s, C	Y	[s+C] <- d

	Rs -> A ; OP -> B ; 0000 -> ALU OP ; ALU R -> RESULT
	RESULT -> Madr ; Rd -> Mem


0011011	mfhi	d	X

	HI -> Rd


0011100	mflo	d	X

	LO -> Rd

0011111 halt

	1 -> HALT

next:
	1 -> T reset
